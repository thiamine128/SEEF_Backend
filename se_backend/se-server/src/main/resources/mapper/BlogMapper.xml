<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.software.mapper.BlogMapper">

    <select id="favorPageQuery" resultType="com.software.entity.Blog">
        select * from blogs where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>

    <select id="pageQuery" resultType="com.software.entity.Blog">
        select * from blogs
        <where>
            <if test="topicIds != null">
                and topic_id in
                 <foreach collection="topicIds" item="id" separator="," open="(" close=")">
                     #{id}
                 </foreach>
            </if>
            <if test="keyword != null">
                and (content like concat('%',#{keyword},'%') or content like concat('%',#{keyword},'%'))
            </if>
            <if test="tags != null">
                 and
                <foreach collection="tags" item="tag" separator="or" open="(" close=")">
                    tags like concat('%;', #{tag}, ';%')
                </foreach>
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
        </where>
        <if test="orderBy == 'popularity'">
            order by popularity / EXP(CAST((UNIX_TIMESTAMP() - UNIX_TIMESTAMP(create_time)) / 60 / 60 / 1000 as DOUBLE) / 10000)
            <if test="sort != null">
                ${sort}
            </if>
        </if>
        <if test="orderBy == 'createTime'">
            order by create_time
            <if test="sort != null">
                ${sort}
            </if>
        </if>
        <if test="orderBy == 'updateTime'">
            order by update_time
            <if test="sort != null">
                ${sort}
            </if>
        </if>
    </select>

    <select id="getAllUserPreference" resultType="com.software.entity.UserBlogOperation">
        SELECT
            user_id,
            article_id,
            SUM(
                    CASE operation_type
                        WHEN 0 THEN 2
                        WHEN 1 THEN 3
                        WHEN 2 THEN 5
                        else 0 END
            ) AS "value"
        FROM
            user_article_operation
        GROUP BY user_id,article_id
    </select>
    <select id="recommend" resultType="com.software.entity.Blog">
        select * from blogs where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>

</mapper>